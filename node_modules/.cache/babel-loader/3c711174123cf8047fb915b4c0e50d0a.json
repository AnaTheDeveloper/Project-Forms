{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useReducer } from \"react\";\nconst initialInputState = {\n  value: '',\n  touched: false\n};\n\nconst inputStateReducer = (state, action) => {\n  return {\n    initialInputState\n  };\n};\n\nconst useInput = validateValue => {\n  _s();\n\n  useReducer(inputStateReducer, initialInputState);\n  const [enteredValue, setEnteredValue] = useState('');\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n\n  const resetInput = () => {\n    setEnteredValue('');\n    setIsTouched(false);\n  };\n\n  return {\n    value: enteredValue,\n    isValid: valueIsValid,\n    hasError,\n    valueChangeHandler,\n    inputBlurHandler,\n    resetInput\n  };\n};\n\n_s(useInput, \"YVEHFegiw0yOrFAxv4G2jyYO0Oo=\");\n\nexport default useInput;","map":{"version":3,"names":["useState","useReducer","initialInputState","value","touched","inputStateReducer","state","action","useInput","validateValue","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","inputBlurHandler","resetInput","isValid"],"sources":["C:/Users/Minnie/VSCode Workspace/React Projects/forms-and-user-input/src/hooks/use-input.js"],"sourcesContent":["import { useState, useReducer } from \"react\";\r\n\r\nconst initialInputState = {\r\n    value: '',\r\n    touched: false,\r\n}\r\n\r\nconst inputStateReducer = (state, action) => {\r\nreturn {initialInputState};\r\n};\r\n\r\nconst useInput = (validateValue) => {\r\n\r\n    useReducer(inputStateReducer, initialInputState)\r\n\r\n    const [enteredValue, setEnteredValue] = useState('');\r\n    const [isTouched, setIsTouched] = useState(false);\r\n\r\n    const valueIsValid = validateValue(enteredValue);\r\n\r\n    const hasError = !valueIsValid && isTouched;\r\n\r\n    const valueChangeHandler = event => {\r\n        setEnteredValue(event.target.value);\r\n    };\r\n\r\n    const inputBlurHandler =  event => {\r\n        setIsTouched(true);\r\n    };\r\n\r\n    const resetInput = () => {\r\n        setEnteredValue('');\r\n        setIsTouched(false);\r\n    }\r\n\r\n    return {\r\n        value: enteredValue,\r\n        isValid: valueIsValid,\r\n        hasError,\r\n        valueChangeHandler,\r\n        inputBlurHandler,\r\n        resetInput,\r\n    }\r\n\r\n};\r\nexport default useInput;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,OAArC;AAEA,MAAMC,iBAAiB,GAAG;EACtBC,KAAK,EAAE,EADe;EAEtBC,OAAO,EAAE;AAFa,CAA1B;;AAKA,MAAMC,iBAAiB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EAC7C,OAAO;IAACL;EAAD,CAAP;AACC,CAFD;;AAIA,MAAMM,QAAQ,GAAIC,aAAD,IAAmB;EAAA;;EAEhCR,UAAU,CAACI,iBAAD,EAAoBH,iBAApB,CAAV;EAEA,MAAM,CAACQ,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,KAAD,CAA1C;EAEA,MAAMc,YAAY,GAAGL,aAAa,CAACC,YAAD,CAAlC;EAEA,MAAMK,QAAQ,GAAG,CAACD,YAAD,IAAiBF,SAAlC;;EAEA,MAAMI,kBAAkB,GAAGC,KAAK,IAAI;IAChCN,eAAe,CAACM,KAAK,CAACC,MAAN,CAAaf,KAAd,CAAf;EACH,CAFD;;EAIA,MAAMgB,gBAAgB,GAAIF,KAAK,IAAI;IAC/BJ,YAAY,CAAC,IAAD,CAAZ;EACH,CAFD;;EAIA,MAAMO,UAAU,GAAG,MAAM;IACrBT,eAAe,CAAC,EAAD,CAAf;IACAE,YAAY,CAAC,KAAD,CAAZ;EACH,CAHD;;EAKA,OAAO;IACHV,KAAK,EAAEO,YADJ;IAEHW,OAAO,EAAEP,YAFN;IAGHC,QAHG;IAIHC,kBAJG;IAKHG,gBALG;IAMHC;EANG,CAAP;AASH,CAjCD;;GAAMZ,Q;;AAkCN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}