{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\React Projects\\\\forms-and-user-input\\\\src\\\\components\\\\SimpleInput.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SimpleInput = props => {\n  _s();\n\n  const nameInputRef = useRef();\n  const [enteredName, setEnteredName] = useState('');\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(\"Use State method\", enteredName);\n    const enteredValue = nameInputRef.current.value;\n    console.log(\"Use Ref method\", enteredValue);\n    setEnteredName();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Your Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: nameInputRef,\n        type: \"text\",\n        id: \"name\",\n        onChange: nameInputChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SimpleInput, \"cES3kCRDZaoXz9Pz4Jbvll6lxgs=\");\n\n_c = SimpleInput;\nexport default SimpleInput;\n/*\nThere are two ways we can fetch the entered value.\n1. We can listen to every keystroke and store the value in some state variable.\n2. We can use useRef to fetch the input once the user is done typing in a value.\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"SimpleInput\");","map":{"version":3,"names":["useRef","useState","SimpleInput","props","nameInputRef","enteredName","setEnteredName","nameInputChangeHandler","event","target","value","formSubmissionHandler","preventDefault","console","log","enteredValue","current"],"sources":["C:/Users/Minnie/VSCode Workspace/React Projects/forms-and-user-input/src/components/SimpleInput.js"],"sourcesContent":["import {useRef, useState} from 'react';\n\nconst SimpleInput = (props) => {\n\n  const nameInputRef = useRef();\n\n  const [enteredName, setEnteredName] = useState('');\n\n  const nameInputChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    console.log(\"Use State method\", enteredName);\n\n    const enteredValue = nameInputRef.current.value;\n    console.log(\"Use Ref method\", enteredValue);\n\n    setEnteredName()\n\n  };\n\n  return (\n    <form onSubmit={formSubmissionHandler}>\n      <div className='form-control'>\n        <label htmlFor='name'>Your Name</label>\n        <input \n        ref={nameInputRef} \n        type='text' id='name' \n        onChange={nameInputChangeHandler}\n        />\n      </div>\n      <div className=\"form-actions\">\n        <button>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n\n/*\nThere are two ways we can fetch the entered value.\n1. We can listen to every keystroke and store the value in some state variable.\n2. We can use useRef to fetch the input once the user is done typing in a value.\n\n*/"],"mappings":";;;AAAA,SAAQA,MAAR,EAAgBC,QAAhB,QAA+B,OAA/B;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAAA;;EAE7B,MAAMC,YAAY,GAAGJ,MAAM,EAA3B;EAEA,MAAM,CAACK,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,EAAD,CAA9C;;EAEA,MAAMM,sBAAsB,GAAGC,KAAK,IAAI;IACtCF,cAAc,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd;EACD,CAFD;;EAIA,MAAMC,qBAAqB,GAAGH,KAAK,IAAI;IACrCA,KAAK,CAACI,cAAN;IACAC,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCT,WAAhC;IAEA,MAAMU,YAAY,GAAGX,YAAY,CAACY,OAAb,CAAqBN,KAA1C;IACAG,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BC,YAA9B;IAEAT,cAAc;EAEf,CATD;;EAWA,oBACE;IAAM,QAAQ,EAAEK,qBAAhB;IAAA,wBACE;MAAK,SAAS,EAAC,cAAf;MAAA,wBACE;QAAO,OAAO,EAAC,MAAf;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QACA,GAAG,EAAEP,YADL;QAEA,IAAI,EAAC,MAFL;QAEY,EAAE,EAAC,MAFf;QAGA,QAAQ,EAAEG;MAHV;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eASE;MAAK,SAAS,EAAC,cAAf;MAAA,uBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD,CApCD;;GAAML,W;;KAAAA,W;AAsCN,eAAeA,WAAf;AAEA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}