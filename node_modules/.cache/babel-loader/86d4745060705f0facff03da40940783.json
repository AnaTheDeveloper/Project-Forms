{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\React Projects\\\\forms-and-user-input\\\\src\\\\components\\\\BasicFormAfter.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicFormAfter = props => {\n  _s();\n\n  //States\n  const [enteredFirstName, setEnteredFirstName] = useState('');\n  const [enteredLastName, setEnteredLastName] = useState('');\n  const [enteredEmail, setEnteredEmail] = useState('');\n  const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\n  const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\n  const [enteredEmailTouched, setEnteredEmailTouched] = useState(false); //Validation\n\n  const enteredFirstNameIsValid = enteredFirstName.trim() !== '';\n  const enteredLastNameIsValid = enteredLastName.trim() !== '';\n  const enteredEmailIsValid = enteredEmail.includes('@');\n  const enteredFirstNameIsInvalid = !enteredFirstNameIsValid && enteredFirstNameTouched;\n  const enteredLastNameIsInvalid = !enteredLastNameIsValid && enteredLastNameTouched;\n  const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched; //Form Validity\n\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } //Handlers\n\n\n  const firstNameInputHandler = event => {\n    setEnteredFirstName(event.target.value);\n  };\n\n  const lastNameInputhandler = event => {\n    setEnteredLastName(event.target.value);\n  };\n\n  const emailInputHandler = event => {\n    setEnteredEmail(event.target.value);\n  };\n\n  const firstNameBlurHandler = event => {\n    setEnteredFirstNameTouched(true);\n  };\n\n  const lastNameBlurHandler = event => {\n    setEnteredLastNameTouched(true);\n  };\n\n  const emailBlurHandler = event => {\n    setEnteredEmailTouched(true);\n  }; //Submission Handler\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredFirstNameTouched(true);\n    setEnteredLastNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"Entered First Name: \", enteredFirstName);\n    console.log(\"Entered Last Name: \", enteredLastName);\n    console.log(\"Entered Email: \", enteredEmail);\n    setEnteredFirstName('');\n    setEnteredLastName('');\n    setEnteredEmail('');\n    setEnteredFirstNameTouched(false);\n    setEnteredLastNameTouched(false);\n    setEnteredEmailTouched(false);\n  }; //CSS Style \n\n\n  const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: firstNameInputHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), enteredFirstNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastnameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameInputhandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), enteredLastNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid Email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BasicFormAfter, \"tTKAWWziyaqfiHHZ5noQ2EXkjwM=\");\n\n_c = BasicFormAfter;\nexport default BasicFormAfter;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicFormAfter\");","map":{"version":3,"names":["useInput","BasicFormAfter","props","enteredFirstName","setEnteredFirstName","useState","enteredLastName","setEnteredLastName","enteredEmail","setEnteredEmail","enteredFirstNameTouched","setEnteredFirstNameTouched","enteredLastNameTouched","setEnteredLastNameTouched","enteredEmailTouched","setEnteredEmailTouched","enteredFirstNameIsValid","trim","enteredLastNameIsValid","enteredEmailIsValid","includes","enteredFirstNameIsInvalid","enteredLastNameIsInvalid","enteredEmailIsInvalid","formIsValid","firstNameInputHandler","event","target","value","lastNameInputhandler","emailInputHandler","firstNameBlurHandler","lastNameBlurHandler","emailBlurHandler","formSubmissionHandler","preventDefault","console","log","firstNameInputStyles","lastnameInputStyles","emailInputStyles"],"sources":["C:/Users/Minnie/VSCode Workspace/React Projects/forms-and-user-input/src/components/BasicFormAfter.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\r\n\r\nconst BasicFormAfter = (props) => {\r\n\r\n    \r\n\r\n    //States\r\n    const [enteredFirstName, setEnteredFirstName] = useState('');\r\n    const [enteredLastName, setEnteredLastName] = useState('');\r\n    const [enteredEmail, setEnteredEmail] = useState('');\r\n\r\n    const [enteredFirstNameTouched, setEnteredFirstNameTouched] = useState(false);\r\n    const [enteredLastNameTouched, setEnteredLastNameTouched] = useState(false);\r\n    const [enteredEmailTouched, setEnteredEmailTouched] = useState(false);\r\n  \r\n    //Validation\r\n\r\n    const enteredFirstNameIsValid = enteredFirstName.trim() !== '';\r\n    const enteredLastNameIsValid = enteredLastName.trim() !== '';\r\n    const enteredEmailIsValid = enteredEmail.includes('@');\r\n\r\n    const enteredFirstNameIsInvalid = !enteredFirstNameIsValid && enteredFirstNameTouched;\r\n    const enteredLastNameIsInvalid = !enteredLastNameIsValid && enteredLastNameTouched;\r\n    const enteredEmailIsInvalid = !enteredEmailIsValid && enteredEmailTouched;\r\n\r\n    //Form Validity\r\n\r\n    let formIsValid = false;\r\n    if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n  \r\n    //Handlers\r\n\r\n    const firstNameInputHandler = (event) => {\r\n        setEnteredFirstName(event.target.value);\r\n    };\r\n\r\n    const lastNameInputhandler = (event) => {\r\n        setEnteredLastName(event.target.value);\r\n    };\r\n\r\n    const emailInputHandler = (event) => {\r\n        setEnteredEmail(event.target.value);\r\n    };\r\n\r\n\r\n    const firstNameBlurHandler = (event) => {\r\n        setEnteredFirstNameTouched(true);\r\n    };\r\n\r\n    const lastNameBlurHandler = (event) => {\r\n        setEnteredLastNameTouched(true);\r\n    };\r\n\r\n    const emailBlurHandler = (event) => {\r\n        setEnteredEmailTouched(true);\r\n    };\r\n  \r\n    //Submission Handler\r\n\r\n    const formSubmissionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        setEnteredFirstNameTouched(true);\r\n        setEnteredLastNameTouched(true);\r\n        setEnteredEmailTouched(true);\r\n\r\n        if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\r\n            return ;\r\n        }\r\n\r\n        console.log(\"Entered First Name: \", enteredFirstName);\r\n        console.log(\"Entered Last Name: \", enteredLastName);\r\n        console.log(\"Entered Email: \", enteredEmail);\r\n\r\n        setEnteredFirstName('');\r\n        setEnteredLastName('');\r\n        setEnteredEmail('');\r\n\r\n        setEnteredFirstNameTouched(false);\r\n        setEnteredLastNameTouched(false);\r\n        setEnteredEmailTouched(false);\r\n    }\r\n  \r\n    //CSS Style \r\n    const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\r\n\r\n  \r\n    return (\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className='control-group'>\r\n  \r\n          <div className={firstNameInputStyles}>\r\n            <label htmlFor='name'>First Name</label>\r\n            <input \r\n            type='text' \r\n            id='firstName' \r\n            onChange={firstNameInputHandler}\r\n            onBlur={firstNameBlurHandler}\r\n            value={enteredFirstName}\r\n            />\r\n            {enteredFirstNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n          <div className={lastnameInputStyles}>\r\n            <label htmlFor='name'>Last Name</label>\r\n            <input \r\n            type='text' \r\n            id='lastName' \r\n            onChange={lastNameInputhandler}\r\n            onBlur={lastNameBlurHandler}\r\n            value={enteredLastName}\r\n            />\r\n            {enteredLastNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <div className={emailInputStyles}>\r\n          <label htmlFor='name'>E-Mail Address</label>\r\n          <input\r\n          type='email' \r\n          id='email' \r\n          onChange={emailInputHandler}\r\n          onBlur={emailBlurHandler}\r\n          value={enteredEmail}\r\n          />\r\n        {enteredEmailIsInvalid && <p className=\"error-text\">Enter a valid Email.</p>}\r\n        </div>\r\n  \r\n        <div className='form-actions'>\r\n          <button disabled={!formIsValid}>Submit</button>\r\n        </div>\r\n        \r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default BasicFormAfter;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}