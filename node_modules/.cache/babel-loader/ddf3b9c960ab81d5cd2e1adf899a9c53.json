{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\React Projects\\\\forms-and-user-input\\\\src\\\\components\\\\BasicFormAfter.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicFormAfter = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: enteredFirstNameIsInvalid,\n    valueChangeHandler: firstNameInputHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    resetInput: resetFirstName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredLastName,\n    isValid: enteredLastNameIsValid,\n    hasError: enteredLastNameIsInvalid,\n    valueChangeHandler: lastNameInputHandler,\n    inputBlurHandler: lastNameBlurHandler,\n    resetInput: resetLastName\n  } = useInput(value => value.trim() !== '');\n  const {\n    value: enteredEmail,\n    isValid: enteredEmailIsValid,\n    hasError: enteredEmailIsInvalid,\n    valueChangeHandler: EmailNameInputHandler,\n    inputBlurHandler: EmailNameBlurHandler,\n    resetInput: resetEmail\n  } = useInput(value => value.trim() !== ''); //Form Validity\n\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } //Submission Handler\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"Entered First Name: \", enteredFirstName);\n    console.log(\"Entered Last Name: \", enteredLastName);\n    console.log(\"Entered Email: \", enteredEmail);\n    resetFirstName();\n    resetLastName();\n    resetEmail();\n  }; //CSS Style \n\n\n  const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: firstNameInputHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), enteredFirstNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastnameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameInputHandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), enteredLastNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid Email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BasicFormAfter, \"44TW8MuPbMB4lp8vRUphKgYSYAE=\", false, function () {\n  return [useInput, useInput, useInput];\n});\n\n_c = BasicFormAfter;\nexport default BasicFormAfter;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicFormAfter\");","map":{"version":3,"names":["useInput","BasicFormAfter","props","value","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","enteredFirstNameIsInvalid","valueChangeHandler","firstNameInputHandler","inputBlurHandler","firstNameBlurHandler","resetInput","resetFirstName","trim","enteredLastName","enteredLastNameIsValid","enteredLastNameIsInvalid","lastNameInputHandler","lastNameBlurHandler","resetLastName","enteredEmail","enteredEmailIsValid","enteredEmailIsInvalid","EmailNameInputHandler","EmailNameBlurHandler","resetEmail","formIsValid","formSubmissionHandler","event","preventDefault","console","log","firstNameInputStyles","lastnameInputStyles","emailInputStyles","emailInputHandler","emailBlurHandler"],"sources":["C:/Users/Minnie/VSCode Workspace/React Projects/forms-and-user-input/src/components/BasicFormAfter.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\r\n\r\nconst BasicFormAfter = (props) => {\r\n\r\n    const {\r\n        value: enteredFirstName,\r\n        isValid: enteredFirstNameIsValid,\r\n        hasError: enteredFirstNameIsInvalid,\r\n        valueChangeHandler: firstNameInputHandler,\r\n        inputBlurHandler: firstNameBlurHandler,\r\n        resetInput: resetFirstName,\r\n    } =useInput(value => value.trim() !== '');\r\n\r\n    const {\r\n        value: enteredLastName,\r\n        isValid: enteredLastNameIsValid,\r\n        hasError: enteredLastNameIsInvalid,\r\n        valueChangeHandler: lastNameInputHandler,\r\n        inputBlurHandler: lastNameBlurHandler,\r\n        resetInput: resetLastName,\r\n    } =useInput(value => value.trim() !== '');\r\n\r\n    const {\r\n        value: enteredEmail,\r\n        isValid: enteredEmailIsValid,\r\n        hasError: enteredEmailIsInvalid,\r\n        valueChangeHandler: EmailNameInputHandler,\r\n        inputBlurHandler: EmailNameBlurHandler,\r\n        resetInput: resetEmail,\r\n    } =useInput(value => value.trim() !== '');\r\n\r\n    //Form Validity\r\n\r\n    let formIsValid = false;\r\n    if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n  \r\n    //Submission Handler\r\n\r\n    const formSubmissionHandler = (event) => {\r\n\r\n        event.preventDefault();\r\n\r\n        if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\r\n            return ;\r\n        }\r\n\r\n        console.log(\"Entered First Name: \", enteredFirstName);\r\n        console.log(\"Entered Last Name: \", enteredLastName);\r\n        console.log(\"Entered Email: \", enteredEmail);\r\n\r\n        resetFirstName();\r\n        resetLastName();\r\n        resetEmail();\r\n    }\r\n  \r\n    //CSS Style \r\n    const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\r\n\r\n  \r\n    return (\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className='control-group'>\r\n  \r\n          <div className={firstNameInputStyles}>\r\n            <label htmlFor='name'>First Name</label>\r\n            <input \r\n            type='text' \r\n            id='firstName' \r\n            onChange={firstNameInputHandler}\r\n            onBlur={firstNameBlurHandler}\r\n            value={enteredFirstName}\r\n            />\r\n            {enteredFirstNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n          <div className={lastnameInputStyles}>\r\n            <label htmlFor='name'>Last Name</label>\r\n            <input \r\n            type='text' \r\n            id='lastName' \r\n            onChange={lastNameInputHandler}\r\n            onBlur={lastNameBlurHandler}\r\n            value={enteredLastName}\r\n            />\r\n            {enteredLastNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <div className={emailInputStyles}>\r\n          <label htmlFor='name'>E-Mail Address</label>\r\n          <input\r\n          type='email' \r\n          id='email' \r\n          onChange={emailInputHandler}\r\n          onBlur={emailBlurHandler}\r\n          value={enteredEmail}\r\n          />\r\n        {enteredEmailIsInvalid && <p className=\"error-text\">Enter a valid Email.</p>}\r\n        </div>\r\n  \r\n        <div className='form-actions'>\r\n          <button disabled={!formIsValid}>Submit</button>\r\n        </div>\r\n        \r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default BasicFormAfter;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}