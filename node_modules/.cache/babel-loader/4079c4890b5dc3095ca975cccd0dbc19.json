{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minnie\\\\VSCode Workspace\\\\React Projects\\\\forms-and-user-input\\\\src\\\\components\\\\BasicFormAfter.js\",\n    _s = $RefreshSig$();\n\nimport useInput from \"../hooks/use-input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BasicFormAfter = props => {\n  _s();\n\n  const {\n    value: enteredFirstName,\n    isValid: enteredFirstNameIsValid,\n    hasError: enteredFirstNameIsInvalid,\n    valueChangeHandler: firstNameInputHandler,\n    inputBlurHandler: firstNameBlurHandler,\n    resetInput: resetFirstName\n  } = useInput(value => value.trim() !== ''); //Form Validity\n\n  let formIsValid = false;\n\n  if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\n    formIsValid = true;\n  } //Submission Handler\n\n\n  const formSubmissionHandler = event => {\n    event.preventDefault();\n    setEnteredFirstNameTouched(true);\n    setEnteredLastNameTouched(true);\n    setEnteredEmailTouched(true);\n\n    if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\n      return;\n    }\n\n    console.log(\"Entered First Name: \", enteredFirstName);\n    console.log(\"Entered Last Name: \", enteredLastName);\n    console.log(\"Entered Email: \", enteredEmail);\n    setEnteredFirstName('');\n    setEnteredLastName('');\n    setEnteredEmail('');\n    setEnteredFirstNameTouched(false);\n    setEnteredLastNameTouched(false);\n    setEnteredEmailTouched(false);\n  }; //CSS Style \n\n\n  const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\n  const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formSubmissionHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: firstNameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"First Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"firstName\",\n          onChange: firstNameInputHandler,\n          onBlur: firstNameBlurHandler,\n          value: enteredFirstName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), enteredFirstNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 43\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: lastnameInputStyles,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"name\",\n          children: \"Last Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"lastName\",\n          onChange: lastNameInputhandler,\n          onBlur: lastNameBlurHandler,\n          value: enteredLastName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), enteredLastNameIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-text\",\n          children: \"Name must not be empty.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 42\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: emailInputStyles,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"E-Mail Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        onChange: emailInputHandler,\n        onBlur: emailBlurHandler,\n        value: enteredEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), enteredEmailIsInvalid && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-text\",\n        children: \"Enter a valid Email.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 35\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-actions\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: !formIsValid,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 7\n  }, this);\n};\n\n_s(BasicFormAfter, \"3yBCYz+o+CJylOWqlxkXfM9zIBs=\", false, function () {\n  return [useInput];\n});\n\n_c = BasicFormAfter;\nexport default BasicFormAfter;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicFormAfter\");","map":{"version":3,"names":["useInput","BasicFormAfter","props","value","enteredFirstName","isValid","enteredFirstNameIsValid","hasError","enteredFirstNameIsInvalid","valueChangeHandler","firstNameInputHandler","inputBlurHandler","firstNameBlurHandler","resetInput","resetFirstName","trim","formIsValid","enteredLastNameIsValid","enteredEmailIsValid","formSubmissionHandler","event","preventDefault","setEnteredFirstNameTouched","setEnteredLastNameTouched","setEnteredEmailTouched","console","log","enteredLastName","enteredEmail","setEnteredFirstName","setEnteredLastName","setEnteredEmail","firstNameInputStyles","lastnameInputStyles","enteredLastNameIsInvalid","emailInputStyles","enteredEmailIsInvalid","lastNameInputhandler","lastNameBlurHandler","emailInputHandler","emailBlurHandler"],"sources":["C:/Users/Minnie/VSCode Workspace/React Projects/forms-and-user-input/src/components/BasicFormAfter.js"],"sourcesContent":["import useInput from \"../hooks/use-input\";\r\n\r\nconst BasicFormAfter = (props) => {\r\n\r\n    const {\r\n        value: enteredFirstName,\r\n        isValid: enteredFirstNameIsValid,\r\n        hasError: enteredFirstNameIsInvalid,\r\n        valueChangeHandler: firstNameInputHandler,\r\n        inputBlurHandler: firstNameBlurHandler,\r\n        resetInput: resetFirstName,\r\n    } =useInput(value => value.trim() !== '');\r\n\r\n    //Form Validity\r\n\r\n    let formIsValid = false;\r\n    if (enteredFirstNameIsValid && enteredLastNameIsValid && enteredEmailIsValid) {\r\n        formIsValid = true;\r\n    }\r\n  \r\n    //Submission Handler\r\n\r\n    const formSubmissionHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        setEnteredFirstNameTouched(true);\r\n        setEnteredLastNameTouched(true);\r\n        setEnteredEmailTouched(true);\r\n\r\n        if (!enteredFirstNameIsValid && !enteredLastNameIsValid && !enteredEmailIsValid) {\r\n            return ;\r\n        }\r\n\r\n        console.log(\"Entered First Name: \", enteredFirstName);\r\n        console.log(\"Entered Last Name: \", enteredLastName);\r\n        console.log(\"Entered Email: \", enteredEmail);\r\n\r\n        setEnteredFirstName('');\r\n        setEnteredLastName('');\r\n        setEnteredEmail('');\r\n\r\n        setEnteredFirstNameTouched(false);\r\n        setEnteredLastNameTouched(false);\r\n        setEnteredEmailTouched(false);\r\n    }\r\n  \r\n    //CSS Style \r\n    const firstNameInputStyles = enteredFirstNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const lastnameInputStyles = enteredLastNameIsInvalid ? 'form-control invalid' : 'form-control';\r\n    const emailInputStyles = enteredEmailIsInvalid ? 'form-control invalid' : 'form-control';\r\n\r\n  \r\n    return (\r\n      <form onSubmit={formSubmissionHandler}>\r\n        <div className='control-group'>\r\n  \r\n          <div className={firstNameInputStyles}>\r\n            <label htmlFor='name'>First Name</label>\r\n            <input \r\n            type='text' \r\n            id='firstName' \r\n            onChange={firstNameInputHandler}\r\n            onBlur={firstNameBlurHandler}\r\n            value={enteredFirstName}\r\n            />\r\n            {enteredFirstNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n          <div className={lastnameInputStyles}>\r\n            <label htmlFor='name'>Last Name</label>\r\n            <input \r\n            type='text' \r\n            id='lastName' \r\n            onChange={lastNameInputhandler}\r\n            onBlur={lastNameBlurHandler}\r\n            value={enteredLastName}\r\n            />\r\n            {enteredLastNameIsInvalid && <p className=\"error-text\">Name must not be empty.</p>}\r\n          </div>\r\n  \r\n        </div>\r\n  \r\n        <div className={emailInputStyles}>\r\n          <label htmlFor='name'>E-Mail Address</label>\r\n          <input\r\n          type='email' \r\n          id='email' \r\n          onChange={emailInputHandler}\r\n          onBlur={emailBlurHandler}\r\n          value={enteredEmail}\r\n          />\r\n        {enteredEmailIsInvalid && <p className=\"error-text\">Enter a valid Email.</p>}\r\n        </div>\r\n  \r\n        <div className='form-actions'>\r\n          <button disabled={!formIsValid}>Submit</button>\r\n        </div>\r\n        \r\n      </form>\r\n    );\r\n  };\r\n  \r\n  export default BasicFormAfter;\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module"}